"""
Django settings for trauma_register project.

Generated by 'django-admin startproject' using Django 5.1.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

"""
Command to execute server in windows:
waitress-serve --listen=0.0.0.0:8000 trauma_register.wsgi.application

Command to execute server in macos/linux:
gunicorn --bind 0.0.0.0:8000 trauma_register.wsgi
"""

from datetime import timedelta
from pathlib import Path
import os
from dotenv import load_dotenv
import dj_database_url

load_dotenv(override=True)

variable_name_database = os.getenv('DB_NAME')
variable_user = os.getenv('DB_USER')
variable_password = os.getenv('DB_PASSWORD')
variable_host = os.getenv('DB_HOST')
variable_port = os.getenv('DB_PORT')
variable_frontend_port = os.getenv('FRONTEND_PORT')
variable_database_url = os.getenv('DATABASE_URL')

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-@r5-3kkn1p$b_ok0hwt#!-8i0b)700ri6h!m@f8c*mk^y%1-mx"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "data_analysis",
    "medical_records",
    "upload_manager",
    "custom_user",
    "corsheaders",
    "rest_framework",
    "rest_framework.authtoken",
]

CORS_ALLOWED_ORIGINS = [
    "http://localhost:8000",  # Cambia esto por la URL de tu frontend en producci√≥n
    "http://127.0.0.1:8000",
    "http://localhost:3000",  # Si usas otro puerto en desarrollo
    "https://diego2038.github.io/trauma_register_frontend/",
    "https://ephemeral-llama-5087ad.netlify.app",
    f"http://localhost:{variable_frontend_port}", # Para el puerto variable en Flutter
]

CORS_ALLOW_CREDENTIALS = True

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ],
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',
    ],
}

SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(minutes=60),
    'REFRESH_TOKEN_LIFETIME': timedelta(days=1),
    'ROTATE_REFRESH_TOKENS': True,
    'BLACKLIST_AFTER_ROTATION': True,
    'AUTH_HEADER_TYPES': ('Bearer',),
    'AUTH_TOKEN_CLASSES': ('rest_framework_simplejwt.tokens.AccessToken',),
}

AUTH_USER_MODEL = 'custom_user.CustomUser'

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "corsheaders.middleware.CorsMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "trauma_register.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "trauma_register.wsgi.application"


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

if variable_database_url:
    DATABASES = {
        "default": dj_database_url.parse(variable_database_url),
    }
else: DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.postgresql",
        "NAME": variable_name_database,
        "USER": variable_user,
        "PASSWORD": variable_password,
        "HOST": variable_host,
        "PORT": variable_port,
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = "static/"

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"
